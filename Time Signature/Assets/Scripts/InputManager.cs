//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/InputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputManager: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputManager()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputManager"",
    ""maps"": [
        {
            ""name"": ""Character"",
            ""id"": ""bed4c559-3774-45b1-a385-5ef80d3dfd3e"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e6f53074-0f09-401a-a61f-e905dd31b5e6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PlayNote"",
                    ""type"": ""Button"",
                    ""id"": ""b17f9e3c-04bd-46a8-848d-2438c41c884b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""df5564dc-73b0-4917-8a4d-3ec038c96929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayMagicNoteA"",
                    ""type"": ""Button"",
                    ""id"": ""2284cbc2-0b5f-4c70-98e3-6b9a1d6ab0eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayMagicNoteB"",
                    ""type"": ""Button"",
                    ""id"": ""664acb1e-8120-41c2-b3aa-646f9361ee5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayMagicNoteC"",
                    ""type"": ""Button"",
                    ""id"": ""f983b4b6-8ac2-4e42-bd47-a5bb89b73710"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""239882f8-1755-4643-8af5-421f8e732455"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5c6e6acf-e52b-4843-960c-40bafb3f92b0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ac351295-1a83-4194-be09-3fb9c84c00dc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eccd4756-c2a8-465c-8b7f-a0bd8637f6f0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0791893d-5369-4003-aa76-498dfcbf072b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""aae962b4-3948-4df6-84c3-b1fb57a473d1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29c22464-0677-4c9b-bd1b-8874de79d4c9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cc5b644-ed55-467f-a197-1347cff4358a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""201357de-90ca-4b75-b5fa-bbfa70695b99"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12f4eacd-7d31-492e-9b5a-f7cbd53ac333"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2a29ba2-db4c-4a22-bcf8-6e37e360d69c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayMagicNoteA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c273682b-015b-432e-a60f-679349bd2751"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayMagicNoteA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d53b58bc-a5e5-46f7-ae31-edc083c6f9d6"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayMagicNoteB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65f22266-2734-4c48-b15f-5c49a542a07a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayMagicNoteB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60155a96-c7a5-4fd1-afbd-1b70e86df5a1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayMagicNoteC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc1e1218-4c41-42b9-a8f7-221c043fb277"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayMagicNoteC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Character
        m_Character = asset.FindActionMap("Character", throwIfNotFound: true);
        m_Character_Move = m_Character.FindAction("Move", throwIfNotFound: true);
        m_Character_PlayNote = m_Character.FindAction("PlayNote", throwIfNotFound: true);
        m_Character_Interact = m_Character.FindAction("Interact", throwIfNotFound: true);
        m_Character_PlayMagicNoteA = m_Character.FindAction("PlayMagicNoteA", throwIfNotFound: true);
        m_Character_PlayMagicNoteB = m_Character.FindAction("PlayMagicNoteB", throwIfNotFound: true);
        m_Character_PlayMagicNoteC = m_Character.FindAction("PlayMagicNoteC", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Character
    private readonly InputActionMap m_Character;
    private List<ICharacterActions> m_CharacterActionsCallbackInterfaces = new List<ICharacterActions>();
    private readonly InputAction m_Character_Move;
    private readonly InputAction m_Character_PlayNote;
    private readonly InputAction m_Character_Interact;
    private readonly InputAction m_Character_PlayMagicNoteA;
    private readonly InputAction m_Character_PlayMagicNoteB;
    private readonly InputAction m_Character_PlayMagicNoteC;
    public struct CharacterActions
    {
        private @InputManager m_Wrapper;
        public CharacterActions(@InputManager wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Character_Move;
        public InputAction @PlayNote => m_Wrapper.m_Character_PlayNote;
        public InputAction @Interact => m_Wrapper.m_Character_Interact;
        public InputAction @PlayMagicNoteA => m_Wrapper.m_Character_PlayMagicNoteA;
        public InputAction @PlayMagicNoteB => m_Wrapper.m_Character_PlayMagicNoteB;
        public InputAction @PlayMagicNoteC => m_Wrapper.m_Character_PlayMagicNoteC;
        public InputActionMap Get() { return m_Wrapper.m_Character; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActions set) { return set.Get(); }
        public void AddCallbacks(ICharacterActions instance)
        {
            if (instance == null || m_Wrapper.m_CharacterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @PlayNote.started += instance.OnPlayNote;
            @PlayNote.performed += instance.OnPlayNote;
            @PlayNote.canceled += instance.OnPlayNote;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
            @PlayMagicNoteA.started += instance.OnPlayMagicNoteA;
            @PlayMagicNoteA.performed += instance.OnPlayMagicNoteA;
            @PlayMagicNoteA.canceled += instance.OnPlayMagicNoteA;
            @PlayMagicNoteB.started += instance.OnPlayMagicNoteB;
            @PlayMagicNoteB.performed += instance.OnPlayMagicNoteB;
            @PlayMagicNoteB.canceled += instance.OnPlayMagicNoteB;
            @PlayMagicNoteC.started += instance.OnPlayMagicNoteC;
            @PlayMagicNoteC.performed += instance.OnPlayMagicNoteC;
            @PlayMagicNoteC.canceled += instance.OnPlayMagicNoteC;
        }

        private void UnregisterCallbacks(ICharacterActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @PlayNote.started -= instance.OnPlayNote;
            @PlayNote.performed -= instance.OnPlayNote;
            @PlayNote.canceled -= instance.OnPlayNote;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
            @PlayMagicNoteA.started -= instance.OnPlayMagicNoteA;
            @PlayMagicNoteA.performed -= instance.OnPlayMagicNoteA;
            @PlayMagicNoteA.canceled -= instance.OnPlayMagicNoteA;
            @PlayMagicNoteB.started -= instance.OnPlayMagicNoteB;
            @PlayMagicNoteB.performed -= instance.OnPlayMagicNoteB;
            @PlayMagicNoteB.canceled -= instance.OnPlayMagicNoteB;
            @PlayMagicNoteC.started -= instance.OnPlayMagicNoteC;
            @PlayMagicNoteC.performed -= instance.OnPlayMagicNoteC;
            @PlayMagicNoteC.canceled -= instance.OnPlayMagicNoteC;
        }

        public void RemoveCallbacks(ICharacterActions instance)
        {
            if (m_Wrapper.m_CharacterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICharacterActions instance)
        {
            foreach (var item in m_Wrapper.m_CharacterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CharacterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CharacterActions @Character => new CharacterActions(this);
    public interface ICharacterActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnPlayNote(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnPlayMagicNoteA(InputAction.CallbackContext context);
        void OnPlayMagicNoteB(InputAction.CallbackContext context);
        void OnPlayMagicNoteC(InputAction.CallbackContext context);
    }
}
